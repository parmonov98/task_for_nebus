version: '3.8'

services:
  # PHP Service
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: nebus-app
    restart: unless-stopped
    working_dir: /var/www/
    depends_on:
      - redis
      - db
    volumes:
      - ./:/var/www
    networks:
      - nebus-network

  # Nginx Service
  nginx:
    image: nginx:alpine
    container_name: nebus-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d/
    networks:
      - nebus-network

  # MariaDB Service
  db:
    image: mariadb:10.11
    container_name: nebus-db
    restart: unless-stopped
    environment:
      MARIADB_DATABASE: ${DB_DATABASE}
      MARIADB_ROOT_PASSWORD: ${DB_PASSWORD}
      MARIADB_PASSWORD: ${DB_PASSWORD}
      MARIADB_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mariadb
    ports:
      - "3306:3306"
    volumes:
      - nebusdata:/var/lib/mysql
    networks:
      - nebus-network

  # phpMyAdmin Service
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: nebus-phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    networks:
      - nebus-network

  # Redis Service
  redis:
    image: redis:alpine
    container_name: nebus-redis
    restart: unless-stopped
    ports:
      - "6380:6379"    # Changed from "6379:6379"
    volumes:
      - redisdata:/data
    networks:
      - nebus-network

  # Redis Commander (Redis Admin UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: nebus-redis-commander
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
      READ_ONLY: "false"
    networks:
      - nebus-network

networks:
  nebus-network:
    driver: bridge

volumes:
  nebusdata:
    driver: local
  redisdata:
    driver: local